{"version":3,"sources":["components/FriendCard/index.js","components/Wrapper/index.js","components/Container/index.js","components/Row/index.js","components/Col/index.js","components/Instructions/index.js","components/Navbar/index.js","App.js","index.js"],"names":["FriendCard","props","className","onClick","playGame","id","alt","name","src","image","Wrapper","children","Container","Row","Col","class","Instructions","Navbar","shuffleCards","array","newArr","slice","i","length","j","Math","floor","random","App","state","friends","shuffledFriends","score","highScore","selectedCards","feedback","active","indexOf","tempArray","push","setState","resetGame","componentDidMount","this","map","friend","key","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.39f31975.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction FriendCard(props) {\n  return (\n    <div className=\"card\" onClick={() => props.playGame(props.id)}>\n      <div className=\"img-container\">\n          <img alt={props.name} src={props.image} />\n      </div>\n    </div>\n  );\n}\n\nexport default FriendCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\n\nfunction Container(props) {\n    return (\n        <div className=\"container-fluid\">\n            {props.children}\n        </div>\n  )\n}\n\nexport default Container;\n","import React from \"react\";\n\nfunction Row(props) {\n  return (\n    <div className=\"row\">\n      {props.children}\n    </div>\n  )\n}\n\nexport default Row;\n","import React from \"react\";\n\nfunction Col(props) {\n  return (\n    <div className={props.class}>\n      {props.children}\n    </div>\n  )\n}\n\nexport default Col;\n","import React from \"react\";\n\nfunction Instructions(props) {\n  return (\n    <span>Click a character to gain a point.  Clicking the same character will result in a game over!</span>\n  )\n}\n\nexport default Instructions;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Navbar(props) {\n  return (\n  <div className=\"bg-dark\">\n    {props.children}\n  </div>\n  )\n}\n\nexport default Navbar;\n","import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Container from \"./components/Container\";\nimport Row from \"./components/Row\";\nimport Col from \"./components/Col\";\nimport Instructions from \"./components/Instructions\";\nimport Navbar from \"./components/Navbar\";\nimport friends from \"./friends.json\";\n\n//\"Friend\" shuffle function\nfunction shuffleCards(array) {\n  let newArr = array.slice(0); //Create new temp Array from state.friends.\n  for (let i = newArr.length - 1; i > 0; i--) {\n    let j = Math.floor(Math.random() * (i + 1));\n    [newArr[i], newArr[j]] = [newArr[j], newArr[i]];\n  }\n  return newArr;\n}\n\nclass App extends Component {\n  state = {\n    friends,\n    shuffledFriends: [],\n    score: 0,\n    highScore: 0,\n    selectedCards: [],\n    feedback: \"\",\n    active: true\n  };\n\n  playGame = (id) => {\n    // Check if game state is not active.  If not, reset game.\n    if (!this.state.active) {\n      this.resetGame(false);\n    }\n    // Game is active, selected card is not in selectedCards list.\n    else if (this.state.selectedCards.indexOf(id) === -1) {\n      let tempArray = this.state.selectedCards;\n      tempArray.push(id);\n      this.setState({\n        shuffledFriends: shuffleCards(this.state.friends),\n        selectedCards: tempArray,\n        feedback: \"Keep going!\",\n        score: this.state.score + 1\n      })\n      if (this.state.score === 12) {\n        this.setState({\n          feedback: \"You've won!\"\n        })\n      }\n    }\n    // Card has already been selected.  Show feedback, and set game to false to prevent additional plays on the current game.\n    else {\n      this.setState({\n        feedback: \"You've lost the game! Click any picture to try again!\",\n        active: false\n      })\n    }\n  }\n\n  resetGame = (state) => {\n    if (this.state.feedback.indexOf(\"Sorry\") > -1 || this.state.feedback.indexOf(\"You've\") > -1 || !state) {\n      if (this.state.score > this.state.highScore) {\n        this.setState({\n          highScore: this.state.score\n        })\n      }\n      this.setState({\n        score: 0,\n        selectedCards: [],\n        feedback: \"\",\n        shuffledFriends: shuffleCards(this.state.friends),\n        active: true\n      })\n    }\n  }\n\n  //On load, shuffle the cards.\n  componentDidMount = () => {\n    this.setState({\n      shuffledFriends: shuffleCards(this.state.friends)\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <Navbar>\n          <Container class=\"fluid\">\n            <Row>\n              <Col class=\"col-12 text-Center\">\n                clickyGame\n              </Col>\n            </Row>\n          </Container>\n        </Navbar>\n        <Instructions />\n        <Wrapper>\n          <Row>\n            <Col class=\"col-4\" />\n            <Col class=\"col-4 text-center info\">\n              Score: {this.state.score} | High Score: {this.state.highScore}\n            </Col>\n            <Col class=\"col-4\" />\n          </Row>\n          <Row>\n            <Col class=\"col-2\" />\n            <Col class=\"col-8 pl-4 text-center info\">\n              &nbsp;{this.state.feedback}\n            </Col>\n            <Col class=\"col-2\" />\n          </Row>\n          {\n            this.state.shuffledFriends.map(friend => (\n              <FriendCard\n                playGame={this.playGame}\n                id={friend.id}\n                key={friend.id}\n                image={friend.image}\n              />\n            ))\n          }\n\n        </Wrapper>\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}